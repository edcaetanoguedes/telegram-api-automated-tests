# Contexto: Repositório de Testes PÚBLICO somente com testes Cypress
name: Backend Automated Tests on telegram-api-backend

on:
  workflow_dispatch: # permite execução manual na aba "Actions"

jobs:
  backend-e2e-tests:
    name: Testes Automatizados E2E (Backend)
    runs-on: ubuntu-latest

    steps: # Tarefas do job
      
      - name: Clonar repositório (backend)
        uses: actions/checkout@v4
        with:
          repository: edcaetanoguedes/telegram-api-backend # Ambos os repos deve estar na mesma conta/organização
          # Token da conta com permissões
          token: ${{ secrets.GH_TELEGRAM_API_TESTS_TOKEN }}
          # Define uma pasta com nome onde o repo será clonado
          # Bom pra quando se lida com mais de um projeto (ex: frontend, backend)
          path: telegram-api-backend
          # Define qual branch/tag será clonada
          ref: main

      - name: Instalar dependências (backend)
        working-directory: telegram-api-backend # Seta a pasta definida em path
        run: npm ci

      - name: Iniciar aplicação na porta 4000 (backend)
        working-directory: telegram-api-backend # Seta a pasta definida em path
        run: npm start &
      
      - name: Verificar se wait-on está instalado
        working-directory: telegram-api-backend
        run: ls node_modules/.bin/wait-on

      - name: Esperar a aplicação estar disponível (backend)
        working-directory: telegram-api-backend # Seta a pasta definida em path
        run: ./node_modules/.bin/wait-on http://localhost:4000/

      - name: Clonar repositório de testes
        uses: actions/checkout@v4
        with:
          repository: edcaetanoguedes/telegram-api-automated-tests
          path: telegram-api-automated-tests

      - name: Instalar dependências (tests)
        working-directory: telegram-api-automated-tests
        run: npm ci

      - name: Executar testes
        working-directory: telegram-api-automated-tests
        # Comando para rodar os testes
        run: npm run test:cy:run
